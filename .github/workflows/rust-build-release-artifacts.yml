# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: rust-build-release-artifacts
on:
  release:
    types:
      - published
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ""
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
            suffix: ""
          - build: windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu
            suffix: .exe
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Tests
        run: cargo test --verbose
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.target }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ matrix.target }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ matrix.target }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-binaries
          path: target/${{ matrix.target }}/release/ssm-env${{ matrix.suffix }}
  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Artifacts
        uses: actions/download-artifact@v4
      - name: Upload assets to existing release
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.event.release.tag_name }}
        run: |-
          set -euxo pipefail
          # Prepare asset files with desired names
          cp x86_64-unknown-linux-gnu-binaries/ssm-env ssm-env-x86_64-unknown-linux-gnu
          cp x86_64-apple-darwin-binaries/ssm-env ssm-env-x86_64-apple-darwin
          cp x86_64-pc-windows-gnu-binaries/ssm-env.exe ssm-env-x86_64-pc-windows-gnu.exe
          # Upload assets to the existing release created by release-please
          gh release upload "$TAG" \
                      ssm-env-x86_64-unknown-linux-gnu \
                      ssm-env-x86_64-apple-darwin \
                      ssm-env-x86_64-pc-windows-gnu.exe \
                      --clobber
